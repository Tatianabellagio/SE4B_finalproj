# create a package
library(devtools)
#create_package("~/Documents/soft_e_forbio/mypackage")


# .Rbuildignore
# lists files that we need to have around but that should not be
# included when building the R package from source

#NAMESPACE declares the functions your package exports for external use and the
#external functions your package imports from other packages

#The R/ directory is the “business end” of your package. It will soon contain
#.R files with function definitions.

use_git()

###A reasonable starting position is to make a new .R file for each user-facing
#function in your package and name the file after the function. As you add more
#functions, you’ll want to relax this and begin to group related functions
# together.


# to change to an r script where you fucntion is running
use_r("strsplit1")

# cargar las funciones que desarrolle
load_all()

(x <- "alfa,bravo,charlie,delta")

## so now after loading you can use you functions here!
strsplit1(x, split = ",")

# but the function does not exists in the global environment
exists("strsplit1", where = globalenv(), inherits = FALSE)

#load_all() simulates the process of building, installing, and attaching
#the regexcite package.

check()
#to use a licence
use_mit_license()

document()
?strsplit1

#In addition to converting strsplit1()’s special comment into man/strsplit1.Rd,
#the call to document() updates the NAMESPACE file, based on @export directives
#found in roxygen comments. Open NAMESPACE for inspection. \

check()

## to install the package
install()


library(mypackage)

x <- "alfa,bravo,charlie,delta"
strsplit1(x, split = ",")
#> [1] "alfa"    "bravo"   "charlie" "delta"

use_testthat()
use_test()

#you syat that yoou are goign to use external packages
use_package("stringr")
# it is great becasue it automatically adds this to the descriprion file


# rename the file where the function is because we changed the function
rename_files("strsplit1", "str_split_one")
document()
## because we change the function we now need to also change the docuemnt
## so the roxygen will be updated

# directamente crea un repo en github
use_github()
#to create a read me file
use_readme_rmd()

#para ver donde se enceuntran los paquetes que instale
.libPaths()
